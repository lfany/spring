buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        maven {
            //noinspection GroovyAssignabilityCheck
            url 'http://maven.aliyun.com/mvn/repository'
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'war'
//apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'cc.ifnot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        //noinspection GroovyAssignabilityCheck
        url 'http://maven.aliyun.com/mvn/repository'
    }
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }
//    configurations {
//        providedRuntime
//        compile.exclude(group: 'ch.qos.logback')
//    }
//
    configurations {
        compile.exclude module: 'spring-boot-starter-logging'
    }

    compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-freemarker')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Use MySQL Connector-J
    compile 'mysql:mysql-connector-java'

    compile 'org.webjars:jquery:3.3.1-1'
    testCompile('org.springframework.boot:spring-boot-starter-test')

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}
